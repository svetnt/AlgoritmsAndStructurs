package SportProgr;

//Ваня принес на кухню рулет, который он хочет разделить с коллегами. Для этого он хочет разрезать рулет на N
// равных частей. Разумеется, рулет можно резать только поперек. Соотвественно, jy сделает N - 1 разрез ножом
// через равные промежутки. Ваня задумался — а можно ли было обойтись меньшим числом движений, будь нож Вани
// бесконечно длинным (иначе говоря, если он мог бы сделать сколько угодно разрезов за раз, если эти разрезы
// лежат на одной прямой)? Например, если Ваня хотел бы разделить рулет на 4 части, он мог бы обойтись двумя
// разрезами — сначала он разделил бы рулет на две половинки, а потом совместил бы две половинки и разрезал
// обе пополам одновременно.
//Формат входных данных
//Дано одно натуральное число N(1≤_N_≤2×109) - количество кллег.
//Формат выходных данных
//Выведите одно число — минимальное число движений, которое придется сделать.

public class Rulet {

    public static void main(String[] args) {
        int n = 6;
        System.out.println(new Rulet().count(n));
    }

    private int count(int n){
        int result = 0;
        while (n>1){
           if (n%2==0){
               n = n/2;
               result++;
           } else {
               n = n/2+1;
               result++;
           }
        }
        return result;
    }
}
